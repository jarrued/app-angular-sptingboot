version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: miusuario
      POSTGRES_PASSWORD: mipassword
      POSTGRES_DB: mi_basedatos
    ports:
      - "5432:5432"
    networks:
      - mi-red
    volumes:
      - postgres_data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - mi-red
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - mi-red

  springboot-app:
    build: ./springboot-app
    container_name: springboot-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mi_basedatos
      SPRING_DATASOURCE_USERNAME: miusuario
      SPRING_DATASOURCE_PASSWORD: mipassword
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
    depends_on:
      - postgres
      - elasticsearch
    ports:
      - "8080:8080"
    networks:
      - mi-red

  angular-app:
    build: ./angular-app
    container_name: angular-app
    ports:
      - "4200:80"
    depends_on:
      - springboot-app
    networks:
      - mi-red

volumes:
  postgres_data:
  elasticsearch_data:

networks:
  mi-red:
